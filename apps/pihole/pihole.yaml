---
apiVersion: v1
kind: Namespace
metadata:
  name: pihole
  labels:
    name: pihole
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: pihole-config
  namespace: pihole
data:
  TZ: 'Australia/Sydney'
  DNS1: 8.8.8.8
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: pihole-pvc
  namespace: pihole
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-path
  resources:
    requests:
      storage: 1Gi
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: dnsmasq-pvc
  namespace: pihole
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-path
  resources:
    requests:
      storage: 100Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pihole
  namespace: pihole
  labels:
    app: pihole
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pihole
  template:
    metadata:
      labels:
        app: pihole
    spec:
      containers:
      - name: pihole
        image: pihole/pihole:2022.05
        envFrom:
        - configMapRef:
            name: pihole-config
        ports:
        - name: svc-53-udp
          containerPort: 53
          protocol: UDP
        - name: svc-53-tcp
          containerPort: 53
          protocol: TCP
        - name: svc-ui
          containerPort: 80
          protocol: TCP
          volumeMounts:
            - name: pihole-pvc
              mountPath: "/etc/pihole"
            - name: dnsmasq-pvc
              mountPath: "/etc/dnsmasq.d"
          restartPolicy: Always
      volumes:
        - name: pihole-pvc
          persistentVolumeClaim:
            claimName: pihole-pvc
        - name: dnsmasq-pvc
          persistentVolumeClaim:
            claimName: dnsmasq-pvc
---
kind: Service 
apiVersion: v1 
metadata:
  name: pihole-ui-svc
  namespace: pihole
spec:
  selector:
    app: pihole
  type: ClusterIP
  ports:
    - name: 80-tcp
      port: 80
      targetPort: 80
      protocol: TCP
---
kind: Service 
apiVersion: v1 
metadata:
  name: pihole-dns-svc 
  namespace: pihole
spec:
  selector:
    app: pihole
  type: ClusterIP
  clusterIP: 10.43.0.30
  ports:
    - name: 53-tcp
      port: 53
      targetPort: 53
      protocol: TCP
    - name: 53-udp
      port: 53
      targetPort: 53
      protocol: UDP
---
apiVersion: v1
kind: Service
metadata:
  name: pihole-dns-udp
  namespace: pihole
spec:
  selector:
    app: pihole
  ports:
    - name: 53-udp
      port: 53
      nodePort: 53
      targetPort: 53
      protocol: UDP
      type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  name: pihole-dns-tcp
  namespace: pihole
spec:
  selector:
    app: pihole
  ports:
    - name: 53-tcp
      nodePort: 53
      port: 53
      targetPort: 53
      protocol: TCP
  type: NodePort
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: pihole-ingress
  namespace: pihole
  annotations:
    kubernetes.io/ingress.class: traefik
spec:
  rules:
  - host: pihole.192.168.0.200.nip.io
    http:
      paths:
      - pathType: Prefix 
        path: "/admin"
        backend:
          service:
            name: pihole-ui-svc
            port:
              number: 80
