## This chart relies on the common library chart from bjw-s
## You can find it at https://github.com/bjw-s/helm-charts/tree/main/charts/library/common
## Refer there for more detail about the supported values

# These entries are shared between all the Immich components

image:
  tag: v1.131.3
  
immich:
  persistence:
    # Main data store for all photos shared between different components.
    library:
      # Automatically creating the library volume is not supported by this chart
      # You have to specify an existing PVC to use
      existingClaim: photos

# Dependencies

redis:
  enabled: true
  architecture: standalone
  auth:
    enabled: false
  master:
    resourcesPreset: "micro"

# Immich components

server:
  
  enabled: true
  image:
    repository: ghcr.io/immich-app/immich-server
    pullPolicy: IfNotPresent
  
  ingress:
    main:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: "letsencrypt-production"
        
      hosts:
        - host: immich.camsab.me
          paths:
            - path: "/"
      tls:
        - secretName: immich-ingress-key
          hosts:
            - immich.camsab.me

  affinity:
    podAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/instance: immich
              app.kubernetes.io/name: machine-learning
          topologyKey: "kubernetes.io/hostname"
machine-learning:
  enabled: true
  affinity:
    podAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/instance: immich
              app.kubernetes.io/name: server
          topologyKey: "kubernetes.io/hostname"
  image:
    repository: ghcr.io/immich-app/immich-machine-learning
    pullPolicy: IfNotPresent
  env:
    TRANSFORMERS_CACHE: /cache
  persistence:
    cache:
      enabled: true
      size: 10Gi
      # Optional: Set this to pvc to avoid downloading the ML models every start.
      type: pvc
      accessMode: ReadWriteMany
      storageClass: longhorn

envFrom:
  - secretRef:
      name: immich-postgres-user

env:
  DB_HOSTNAME: 'immich-postgres-rw'